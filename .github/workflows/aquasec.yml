name: GH NODEJS APP
on:
  push:
    branches:
      - main

env:
   DOCKER_REPOSITORY: guyyakir # name of Docker Hub ID
   IMAGE_NAME: gh-nodejs-app
   IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
#test2

jobs:
  CI-Build:
    runs-on: ubuntu-22.04
      
    steps:   
   
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Integrity Pipeline
        uses: aquasecurity/pipeline-enforcer-action@main
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}
  
      - name: Build application
        run: echo Application has been succesfully built   
          
      - name: Build image container
        run: |
          sudo docker build -t $DOCKER_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG .
        
      - name: Docker Login & Push
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG 
        #docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
     
      - name: SBOM Generation
        run: |
          export BILLY_SERVER=https://billy.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ github.token }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --cspm-url https://stage.api.cloudsploit.com \
            --artifact-path "$DOCKER_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG"

            # The docker image name:tag of the newly built image
            # --artifact-path "my-image-name:${{ env.tag-version }}" 
            # OR the path to the root folder of your project. I.e my-repo/my-app 
            ## --artifact-path "${{env.MY_APP_ROOT}}"
            
#https://nicwortel.nl/blog/2022/continuous-deployment-to-kubernetes-with-github-actions
#https://nicwortel.nl/blog/2020/simple-kubernetes-deployment-versioning
